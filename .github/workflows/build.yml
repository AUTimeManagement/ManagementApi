name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    env:
      SOLUTION: './AUTimeManagement.Api/AUTimeManagement.Api.sln'
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - name: Install SonarCloud scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner --version 5.8.0
          dotnet tool install --global coverlet.console
      - run: ls .
      - run: ls ./AUTimeManagement.Api

      - name: Install dependencies
        run: |
          cd AUTimeManagement.Api
          dotnet restore
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          pwd
          cd AUTimeManagement.Api
          pwd
          dotnet sonarscanner begin  /k:"AUTimeManagement_ManagementApi" /o:"autimemanagement" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build --no-incremental --no-restore
          dotnet test --no-build --no-restore --results-directory ./TestResult --collect:"XPlat Code Coverage" --settings coverlet.runsettings
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"